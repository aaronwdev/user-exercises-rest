swagger: "2.0"
info:
  version: 1.0.0
  title: User Exercises Rest API
  license:
    name: Aaron Williams
host: localhost:8080
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/exercises:
    get:
      summary: List all exercises
      operationId: returnAllExercises
      tags:
        - Exercises
      responses:
        "200":
          description: A paged array of exercises
          schema:
            $ref: '#/definitions/Exercises'
    post:
      summary: Create an exercise
      operationId: createExercises
      tags:
       - Exercises
      parameters:
        - name: exercise
          in: body
          description: Exercise to be created
          required: true
          schema:
            $ref: "#/definitions/Exercise"
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Exercise'
  /api/exercises/{id}:
    get:
      summary: Info for a specific exercise
      operationId: returnExerciseById
      tags:
        - Exercises
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the exercise to retrieve
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Exercise'
  /api/users:
    get:
      summary: List all users
      operationId: returnAllUsers
      tags:
        - Users
      responses:
        "200":
          description: A paged array of users
          schema:
            $ref: '#/definitions/Users'
    post:
      summary: Create a user
      operationId: createUser
      tags:
       - Users
      parameters:
        - name: user
          in: body
          description: User to be created
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/User'
  /api/users/{id}:
    get:
      summary: Info for a specific user
      operationId: returnUserById
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to retrieve
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'  
  /api/log:
    post:
      summary: Create a log entry
      operationId: createLog
      tags:
       - Log
      parameters:
        - name: Log
          in: body
          description: Log to be created
          required: true
          schema:
            $ref: "#/definitions/PostLog"
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Log'
  /api/log/{id}:
    get:
      summary: Info for a specific user
      operationId: returnLogById
      tags:
        - Log
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to retrieve
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Log'
definitions:
  Exercise:
    required:
      - id
      - description
    properties:
      id:
        type: integer
        format: int64
      description:
        type: string
  Exercises:
        type: array
        items:
          allOf:
            - $ref: '#/definitions/Exercise'
  User:
    required:
      - id
      - name
      - postcode
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      postcode:
        type: string
  Users:
    type: array
    items:
      allOf:
        - $ref: '#/definitions/User'
  PostLog:
    properties:
      userID:
        type: integer
        format: int64
      exerciseId:
        type: integer
      date:
        type: string
  Log:
    properties:
      id:
        type: integer
        format: int64
      exerciseId:
        type: integer
      date:
        type: string 
      userID:
        type: integer
        format: int64
      userName:
        type: string 
      description:
        type: string